{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOlROnHoQdvfWNcZjC+QeDc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"-93M8KerCnHr","executionInfo":{"status":"error","timestamp":1709215296656,"user_tz":180,"elapsed":9617,"user":{"displayName":"Max Oliver Carlin","userId":"12829633919989286042"}},"outputId":"abd482b9-2efe-49ab-c9ef-92a19df12223"},"outputs":[{"output_type":"stream","name":"stdout","text":["Quantos caracteres deseja inserir na senha?  30\n","{6XHOn!2+Ldkd533\\Ajl:34!Iz9l]]\n","Deseja gerar outra senha?(S/N)  S\n","Quantos caracteres deseja inserir na senha?  5\n","m'8]_\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-24-5b54a1cc5d0d>\u001b[0m in \u001b[0;36m<cell line: 40>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0mcont\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"S\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 41\u001b[0;31m   \u001b[0mgerarsenha\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     42\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mcont\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"N\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-24-5b54a1cc5d0d>\u001b[0m in \u001b[0;36mgerarsenha\u001b[0;34m(base)\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0msenha\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mgerarsenha\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbase\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m     \u001b[0mbase\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mabs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Quantos caracteres deseja inserir na senha?  \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0msenha\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     mapping = {\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}],"source":["from random import randint as rd\n","import sys\n","senha = []\n","def gerarsenha(base):\n","    base = abs(int(input(\"Quantos caracteres deseja inserir na senha?  \")))\n","    senha = []\n","    mapping = {\n","        10: ['a', 'A'], 11: ['b', 'B'], 12: ['c', 'C'], 13: ['d', 'D'], 14: ['e', 'E'], 15: ['f', 'F'],\n","        16: ['g', 'G'], 17: ['h', 'H'], 18: ['i', 'I'], 19: ['j', 'J'], 20: ['k', 'K'], 21: ['l', 'L'],\n","        22: ['m', 'M'], 23: ['n', 'N'], 24: ['o', 'O'], 25: ['p', 'P'], 26: ['q', 'Q'], 27: ['r', 'R'],\n","        28: ['s', 'S'], 29: ['t', 'T'], 30: ['u', 'U'], 31: ['v', 'V'], 32: ['w', 'W'], 33: ['x', 'X'],\n","        34: ['y', 'Y'], 35: ['z', 'Z']\n","    }\n","    spc_mapping = {\n","        36: '!', 37: '\"', 38: '#', 39: '$', 40: '%', 41: '&', 42: \"'\", 43: '(', 44: ')', 45: '*',\n","        46: '+', 47: ',', 48: '-', 49: '.', 50: '/', 51: ':', 52: ';', 53: '<', 54: '=', 55: '>',\n","        56: '?', 57: '@', 58: '[', 59: '\\\\', 60: ']', 61: '^', 62: '_', 63: '`', 64: '{', 65: '|'\n","    }\n","\n","    for i in range(base):\n","        rand = rd(1, 3)\n","        if rand == 1:\n","            rand = rd(0, 9)\n","        elif rand == 2:\n","            rand = rd(10, 35)\n","            letterCase = rd(0, 1)\n","            rand = mapping[rand][letterCase]\n","        elif rand == 3:\n","            rand = rd(36, 65)\n","            rand = spc_mapping[rand]\n","\n","        pos = rd(0, base-1)\n","        senha.insert(pos, rand)\n","        senha_gerada = ''.join([str(x) for x in senha])\n","    print(senha_gerada)\n","\n","gerarsenha(0)\n","cont = str(input(\"Deseja gerar outra senha?(S/N)  \").strip().upper())\n","\n","while cont == \"S\":\n","  gerarsenha(0)\n","if cont == \"N\":\n","  try:\n","    sys.exit()\n","  except SystemExit:\n","    print(f\"Finalizando\")"]}]}